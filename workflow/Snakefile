'''Workflow for the CAMP short read assembly module.'''


from contextlib import redirect_stderr
import os
from os import makedirs
from os.path import basename, join
import pandas as pd
from utils import Workflow_Dirs, ingest_samples


# Load and/or make the working directory structure
dirs = Workflow_Dirs(config['work_dir'], "short-read-taxonomy")


# Load sample names and input files 
SAMPLES = ingest_samples(config['samples'], dirs.TMP)
    
# --- Workflow output --- #

rule all:
    input:
        join(dirs.OUT, 'samples.csv')

# --- Workflow steps --- #

assembler=config['assembler']

assembler_call = 'metaspades.py'

if assembler == 'rnaSPAdes':
    assembler_call = 'rnaspades.py'

if assembler == 'metaviralSPAdes':
    assembler_call = 'metaviralspades.py'

if assembler == 'plasmidSPAdes':
    assembler_call = 'metaplasmidspades.py'

if assembler == 'plasmidSPAdes':
    assembler_call = 'metaplasmidspades.py'

if assembler == 'SPAdes':
    assembler_call = 'spades.py'

if 'SPAdes' in assembler:
    ruleorder: run_metaspades > run_megahit
if 'megahit' == assembler:
    ruleorder: run_megahit > run_metaspades

rule run_metaspades:
    input:
        fwd = join(dirs.TMP,'{sample}_1.fastq.gz'),
        rev = join(dirs.TMP,'{sample}_2.fastq.gz'),
    output:
        join(dirs.OUT,'assembled','{sample}','contigs.fasta'),
    log:
        join(dirs.LOG, 'metaSPAdes', '{sample}.out'),
    params:
        assthreads=config['assembly_threads'],
        metaspades_maxmem=config['metaspades_maxmem'],
        outpath=join(dirs.OUT,'assembled','{sample}'),
        assembly_option=assembler_call,
    shell:
        """
        {params.assembly_option} --only-assembler  -1 {input.fwd} -2 {input.rev} -o {params.outpath} -t {params.assthreads} -m {params.metaspades_maxmem}
        """    

rule run_megahit:
    input:
        fwd = join(dirs.TMP,'{sample}_1.fastq.gz'),
        rev = join(dirs.TMP,'{sample}_2.fastq.gz'),
    output:
        join(dirs.OUT,'assembled','{sample}','contigs.fasta'),
    log:
        join(dirs.LOG, 'metaSPAdes', '{sample}.out'),
    params:
        assthreads=config['assembly_threads'],
        metaspades_maxmem=config['metaspades_maxmem'],
        outpath=join(dirs.OUT,'assembled','{sample}'),
    shell:
        """
        megahit  -1 {input.fwd} -2 {input.rev} -o {params.outpath} -t {params.assthreads} -m {params.metaspades_maxmem} --force
        mv {params.outpath}/final.contigs.fa {params.outpath}/contigs.fasta
        """    

rule make_config:
    input:
        expand(join(dirs.OUT,'assembled','{sample}','contigs.fasta'), sample = SAMPLES)
    output:
        join(dirs.OUT, 'samples.csv')
    run:
        out = []
        for i in input:
            out.append([i.split('/')[-2],i])
            df = pd.DataFrame(out)
            df.columns = ['sample_ID','assembly_directory']
        df.to_csv(str(output), index = False)






































